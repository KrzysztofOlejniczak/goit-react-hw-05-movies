{"version":3,"file":"static/js/963.b1dd1f78.chunk.js","mappings":"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","sources":["components/Spinner/Spinner.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieDetail/MovieDetail.module.css?2e96","components/MovieDetail/MovieDetail.jsx","webpack://goit-react-hw-05-movies/./src/pages/MoviePage/MoviePage.module.css?f915","pages/MoviePage/MoviePage.jsx","services/api.js"],"sourcesContent":["import { SyncLoader } from 'react-spinners';\n\nconst spinnerStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nexport const Spinner = () => {\n  return (\n    <div style={spinnerStyle}>\n      <SyncLoader color=\"#36d7b7\" />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetail_container__LI6q3\",\"infoBox\":\"MovieDetail_infoBox__CM1AB\",\"poster\":\"MovieDetail_poster__T7D7-\",\"info\":\"MovieDetail_info__RBKs4\",\"subNav\":\"MovieDetail_subNav__sUVRF\",\"subNavLink\":\"MovieDetail_subNavLink__Asc1E\"};","import { Suspense } from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport styles from './MovieDetail.module.css';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(NavLink)`\n  display: block;\n  padding: 4px 15px;\n  border-radius: 5px;\n  font-size: 13px;\n  color: white;\n  text-align: center;\n  text-decoration: none;\n  background-color: rgb(23, 156, 68);\n\n  &.active,\n  &:hover,\n  &:focus {\n    background-color: rgb(156, 23, 52);\n  }\n`;\n\nexport const MovieDetail = ({\n  title,\n  poster,\n  year,\n  score,\n  overview,\n  genres,\n  movieId,\n}) => {\n  return (\n    <div className={styles.container}>\n      <div className={styles.infoBox}>\n        <img className={styles.poster} src={poster} alt={`${title} poster`} />\n        <div className={styles.info}>\n          <h1>\n            {title} {year && `(${year})`}\n          </h1>\n          <p>User score: {Math.round(score * 10)}%</p>\n          <h2>Overview:</h2>\n          <p>{overview}</p>\n          <h2>Genres:</h2>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <div>\n        <h3>Additional information:</h3>\n        <ul className={styles.subNav}>\n          <li>\n            <StyledLink className={styles.subNavLink} to={`cast`}>\n              Cast\n            </StyledLink>\n          </li>\n          <li>\n            <StyledLink className={styles.subNavLink} to={`reviews`}>\n              Reviews\n            </StyledLink>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n};\n\nMovieDetail.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  year: PropTypes.string,\n  score: PropTypes.number.isRequired,\n  overview: PropTypes.string.isRequired,\n  genres: PropTypes.string.isRequired,\n  movieId: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoviePage_container__ihf5v\",\"backLink\":\"MoviePage_backLink__cPE0q\"};","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/api';\nimport posterPlaceholder from '../../img/poster-placeholder.png';\nimport { MovieDetail } from '../../components/MovieDetail/MovieDetail';\nimport styles from './MoviePage.module.css';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nconst MoviePage = () => {\n  const location = useLocation();\n\n  const [backLocation, setBackLocation] = useState('/');\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState(null);\n  const [score, setScore] = useState(0);\n  const [overview, setOverview] = useState(\n    `This movie doesn't have a plot outline yet.`\n  );\n  const [poster, setPoster] = useState(posterPlaceholder);\n  const [genres, setGenres] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  const getMovieDetail = async id => {\n    setIsLoading(true);\n    const movie = await getMovieInfo(id);\n    setTitle(movie.data.title);\n    if (movie.data.release_date !== '') {\n      setYear(new Date(movie.data.release_date).getFullYear().toString());\n    }\n    setScore(movie.data.vote_average);\n    if (movie.data.overview !== '') {\n      setOverview(movie.data.overview);\n    }\n    if (movie.data.poster_path) {\n      setPoster(`https://image.tmdb.org/t/p/w500${movie.data.poster_path}`);\n    }\n\n    let movieGenre = [];\n    movie.data.genres.map(genre => {\n      movieGenre = [...movieGenre, genre.name];\n      return setGenres(movieGenre.join(' '));\n    });\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    getMovieDetail(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    setBackLocation(location.state?.from ?? '/');\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className={styles.container}>\n      <Link className={styles.backLink} to={backLocation}>\n        Go back\n      </Link>\n      <MovieDetail\n        title={title}\n        poster={poster}\n        year={year}\n        score={score}\n        overview={overview}\n        genres={genres}\n        movieId={movieId}\n      />\n      {isLoading && <Spinner />}\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import axios from 'axios';\n\nconst API_KEY = '73116bd12aca11956e7ad9f337771b5c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async () => {\n  const response = axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst getMovieInfo = async id => {\n  const response = axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response;\n};\n\nconst getMovieReviews = async (id, page = 1) => {\n  const response = axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response;\n};\n\nconst getMovieCredits = async id => {\n  const response = axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nconst searchMovie = async query => {\n  const response = axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return response;\n};\n\nexport {\n  getTrending,\n  getMovieInfo,\n  getMovieReviews,\n  getMovieCredits,\n  searchMovie,\n};\n"],"names":["spinnerStyle","position","top","left","transform","Spinner","style","color","StyledLink","styled","NavLink","MovieDetail","title","poster","year","score","overview","genres","movieId","className","styles","src","alt","Math","round","to","Suspense","fallback","location","useLocation","useState","backLocation","setBackLocation","setTitle","setYear","setScore","setOverview","posterPlaceholder","setPoster","setGenres","isLoading","setIsLoading","useParams","getMovieDetail","id","getMovieInfo","movie","data","release_date","Date","getFullYear","toString","vote_average","poster_path","movieGenre","map","genre","name","join","useEffect","state","from","API_KEY","axios","getTrending","response","getMovieReviews","page","getMovieCredits","searchMovie","query"],"sourceRoot":""}