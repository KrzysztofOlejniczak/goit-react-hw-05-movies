{"version":3,"file":"static/js/520.8fe83beb.chunk.js","mappings":"8PACA,EAAuB,0BAAvB,EAAuD,yB,kBC4CvD,EAtCoB,WAClB,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,EAAQP,EAAaQ,IAAI,SAQzBC,EAAiB,mCAAG,WAAMF,GAAN,8EACxBD,GAAa,GADW,UAEAI,EAAAA,EAAAA,IAAYH,GAFZ,OAElBI,EAFkB,OAGxBP,EAAQO,EAAUC,KAAKC,SACvBP,GAAa,GAJW,2CAAH,sDAYvB,OALAQ,EAAAA,EAAAA,YAAU,WACHP,GACLE,EAAkBF,EACnB,GAAE,CAACA,KAGF,iCACE,kBAAMQ,UAAWC,EAAaC,SApBb,SAAAC,GACnBA,EAAEC,iBACFlB,EAAgB,CAAEM,MAAOW,EAAEE,OAAO,GAAGC,QACrCH,EAAEE,OAAOE,OACV,EAgBG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQT,UAAWC,EAAYO,KAAK,SAApC,wBAIF,SAACE,EAAA,EAAD,CAAWtB,KAAMA,IAChBE,IAAa,SAACqB,EAAA,EAAD,MAGnB,C,2EC1CD,EAAuB,uB,SCGVC,EAAW,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC1BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,yBACE,SAAC,KAAD,CACEhB,UAAWC,EACXgB,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAMJ,GAHjB,SAKGF,KAIR,EChBD,EAAuB,wBCGVH,EAAY,SAAC,GAAc,IAAZtB,EAAW,EAAXA,KAC1B,OACE,+BACE,eAAIY,UAAWC,EAAf,SACGb,EAAKgC,KAAI,SAAAC,GACR,OAAO,SAACT,EAAD,CAAsBE,GAAIO,EAAGP,GAAID,MAAOQ,EAAGR,OAA5BQ,EAAGP,GAC1B,OAIR,C,4ECZKQ,EAAe,CACnBC,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,yBAGAf,EAAU,WACrB,OACE,gBAAKgB,MAAOL,EAAZ,UACE,SAAC,IAAD,CAAYM,MAAM,aAGvB,C,+LCbKC,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAW,mCAAG,2FACZC,EAAWF,EAAAA,EAAAA,IAAA,qCAAwCD,IADvC,kBAEXG,GAFW,2CAAH,qDAKXC,EAAY,mCAAG,WAAMnB,GAAN,8EACbkB,EAAWF,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,oBAAiCe,EAAjC,oBADE,kBAEZG,GAFY,2CAAH,sDAKZE,EAAe,mCAAG,WAAOpB,GAAP,4FAAWqB,EAAX,+BAAkB,EAClCH,EAAWF,EAAAA,EAAAA,IAAA,gBACNhB,EADM,4BACgBe,EADhB,gCAC+CM,IAF1C,kBAIfH,GAJe,2CAAH,sDAOfI,EAAe,mCAAG,WAAMtB,GAAN,8EAChBkB,EAAWF,EAAAA,EAAAA,IAAA,gBACNhB,EADM,4BACgBe,EADhB,oBADK,kBAIfG,GAJe,2CAAH,sDAOfrC,EAAW,mCAAG,WAAMH,GAAN,8EACZwC,EAAWF,EAAAA,EAAAA,IAAA,+BACSD,EADT,iCACyCrC,EADzC,yBADC,kBAIXwC,GAJW,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/Pages/SearchMovie.module.css?5285","Pages/SearchMovie.jsx","webpack://goit-react-hw-05-movies/./src/components/ListItem/ListItem.module.css?0678","components/ListItem/ListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","components/Spinner/Spinner.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchMovie_form__VWPGr\",\"btn\":\"SearchMovie_btn__AI5VA\"};","import { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovie } from 'services/api';\nimport styles from './SearchMovie.module.css';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nconst SearchMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [list, setList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const query = searchParams.get('query');\n\n  const handleSearch = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target[0].value });\n    e.target.reset();\n  };\n\n  const handleSearchMovie = async query => {\n    setIsLoading(true);\n    const movieList = await searchMovie(query);\n    setList(movieList.data.results);\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    if (!query) return;\n    handleSearchMovie(query);\n  }, [query]);\n\n  return (\n    <>\n      <form className={styles.form} onSubmit={handleSearch}>\n        <input type=\"text\" name=\"Search\"></input>\n        <button className={styles.btn} type=\"submit\">\n          Search\n        </button>\n      </form>\n      <MovieList list={list} />\n      {isLoading && <Spinner />}\n    </>\n  );\n};\n\nexport default SearchMovie;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"ListItem_link__twHxh\"};","import { Link, useLocation } from 'react-router-dom';\nimport styles from './ListItem.module.css';\nimport PropTypes from 'prop-types';\n\nexport const ListItem = ({ title, id }) => {\n  const location = useLocation();\n  return (\n    <li>\n      <Link\n        className={styles.link}\n        to={`/movies/${id}`}\n        state={{ from: location }}\n      >\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nListItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import { ListItem } from 'components/ListItem/ListItem';\nimport styles from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ list }) => {\n  return (\n    <>\n      <ul className={styles.list}>\n        {list.map(el => {\n          return <ListItem key={el.id} id={el.id} title={el.title} />;\n        })}\n      </ul>\n    </>\n  );\n};\n\nMovieList.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import { SyncLoader } from 'react-spinners';\n\nconst spinnerStyle = {\n  position: 'fixed',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n};\n\nexport const Spinner = () => {\n  return (\n    <div style={spinnerStyle}>\n      <SyncLoader color=\"#36d7b7\" />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = '73116bd12aca11956e7ad9f337771b5c';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst getTrending = async () => {\n  const response = axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response;\n};\n\nconst getMovieInfo = async id => {\n  const response = axios.get(`movie/${id}?api_key=${API_KEY}&language=en-US`);\n  return response;\n};\n\nconst getMovieReviews = async (id, page = 1) => {\n  const response = axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  return response;\n};\n\nconst getMovieCredits = async id => {\n  const response = axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response;\n};\n\nconst searchMovie = async query => {\n  const response = axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&include_adult=false`\n  );\n  return response;\n};\n\nexport {\n  getTrending,\n  getMovieInfo,\n  getMovieReviews,\n  getMovieCredits,\n  searchMovie,\n};\n"],"names":["useSearchParams","searchParams","setSearchParams","useState","list","setList","isLoading","setIsLoading","query","get","handleSearchMovie","searchMovie","movieList","data","results","useEffect","className","styles","onSubmit","e","preventDefault","target","value","reset","type","name","MovieList","Spinner","ListItem","title","id","location","useLocation","to","state","from","map","el","spinnerStyle","position","top","left","transform","style","color","API_KEY","axios","getTrending","response","getMovieInfo","getMovieReviews","page","getMovieCredits"],"sourceRoot":""}